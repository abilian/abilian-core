{"version":3,"file":"scribe-plugin-sanitizer.min.js","mappings":"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","sources":["../bower_components/html-janitor/html-janitor.js","../bower_components/lodash-amd/modern/internal/arrayEach.js","../bower_components/lodash-amd/modern/lang/isObject.js","../bower_components/lodash-amd/modern/internal/toObject.js","../bower_components/lodash-amd/modern/internal/baseFor.js","../bower_components/lodash-amd/modern/internal/isLength.js","../bower_components/lodash-amd/modern/internal/baseToString.js","../bower_components/lodash-amd/modern/string/escapeRegExp.js","../bower_components/lodash-amd/modern/internal/isObjectLike.js","../bower_components/lodash-amd/modern/lang/isNative.js","../bower_components/lodash-amd/modern/lang/isArguments.js","../bower_components/lodash-amd/modern/lang/isArray.js","../bower_components/lodash-amd/modern/internal/isIndex.js","../bower_components/lodash-amd/modern/internal/root.js","../bower_components/lodash-amd/modern/support.js","../bower_components/lodash-amd/modern/object/keysIn.js","../bower_components/lodash-amd/modern/internal/shimKeys.js","../bower_components/lodash-amd/modern/object/keys.js","../bower_components/lodash-amd/modern/internal/baseForOwn.js","../bower_components/lodash-amd/modern/internal/arrayCopy.js","../bower_components/lodash-amd/modern/internal/baseForIn.js","../bower_components/lodash-amd/modern/internal/shimIsPlainObject.js","../bower_components/lodash-amd/modern/lang/isPlainObject.js","../bower_components/lodash-amd/modern/lang/isTypedArray.js","../bower_components/lodash-amd/modern/internal/baseCopy.js","../bower_components/lodash-amd/modern/lang/toPlainObject.js","../bower_components/lodash-amd/modern/internal/baseMergeDeep.js","../bower_components/lodash-amd/modern/internal/baseMerge.js","../bower_components/lodash-amd/modern/utility/identity.js","../bower_components/lodash-amd/modern/internal/bindCallback.js","../bower_components/lodash-amd/modern/internal/isIterateeCall.js","../bower_components/lodash-amd/modern/internal/createAssigner.js","../bower_components/lodash-amd/modern/object/merge.js","../bower_components/lodash-amd/modern/internal/initCloneArray.js","../bower_components/lodash-amd/modern/utility/constant.js","../bower_components/lodash-amd/modern/internal/bufferClone.js","../bower_components/lodash-amd/modern/internal/initCloneByTag.js","../bower_components/lodash-amd/modern/internal/initCloneObject.js","../bower_components/lodash-amd/modern/internal/baseClone.js","../bower_components/lodash-amd/modern/lang/cloneDeep.js","../src/scribe-plugin-sanitizer.js"],"sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      var nodeName = node.nodeName.toLowerCase();\n      var allowedAttrs = this.config.tags[nodeName];\n\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (!this.config.tags[nodeName] || isInvalid || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n        var attrName = attr.name.toLowerCase();\n\n        // Allow attribute?\n        var allowedAttrValue = allowedAttrs[attrName];\n        var notInAttrList = ! allowedAttrValue;\n        var valueNotAllowed = allowedAttrValue !== true && attr.value !== allowedAttrValue;\n        if (notInAttrList || valueNotAllowed) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  return HTMLJanitor;\n\n}));\n\n\n//# sourceMappingURL=html-janitor.js.map;\n","define('lodash-amd/modern/internal/arrayEach',[], function() {\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for callback\n   * shorthands or `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  return arrayEach;\n});\n\n","define('lodash-amd/modern/lang/isObject',[], function() {\n\n  /**\n   * Checks if `value` is the language type of `Object`.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // Avoid a V8 JIT bug in Chrome 19-20.\n    // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n    var type = typeof value;\n    return type == 'function' || (value && type == 'object') || false;\n  }\n\n  return isObject;\n});\n\n","define('lodash-amd/modern/internal/toObject',['../lang/isObject'], function(isObject) {\n\n  /**\n   * Converts `value` to an object if it is not one.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {Object} Returns the object.\n   */\n  function toObject(value) {\n    return isObject(value) ? value : Object(value);\n  }\n\n  return toObject;\n});\n\n","define('lodash-amd/modern/internal/baseFor',['./toObject'], function(toObject) {\n\n  /**\n   * The base implementation of `baseForIn` and `baseForOwn` which iterates\n   * over `object` properties returned by `keysFunc` invoking `iteratee` for\n   * each property. Iterator functions may exit iteration early by explicitly\n   * returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  function baseFor(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  }\n\n  return baseFor;\n});\n\n","define('lodash-amd/modern/internal/isLength',[], function() {\n\n  /**\n   * Used as the maximum length of an array-like value.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n   * for more details.\n   */\n  var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This function is based on ES `ToLength`. See the\n   * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   */\n  function isLength(value) {\n    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  return isLength;\n});\n\n","define('lodash-amd/modern/internal/baseToString',[], function() {\n\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  return baseToString;\n});\n\n","define('lodash-amd/modern/string/escapeRegExp',['../internal/baseToString'], function(baseToString) {\n\n  /**\n   * Used to match `RegExp` special characters.\n   * See this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\n   * for more details.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /**\n   * Escapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n   * \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n   *\n   * @static\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escapeRegExp('[lodash](https://lodash.com/)');\n   * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n   */\n  function escapeRegExp(string) {\n    string = baseToString(string);\n    return (string && reHasRegExpChars.test(string))\n      ? string.replace(reRegExpChars, '\\\\$&')\n      : string;\n  }\n\n  return escapeRegExp;\n});\n\n","define('lodash-amd/modern/internal/isObjectLike',[], function() {\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return (value && typeof value == 'object') || false;\n  }\n\n  return isObjectLike;\n});\n\n","define('lodash-amd/modern/lang/isNative',['../string/escapeRegExp', '../internal/isObjectLike'], function(escapeRegExp, isObjectLike) {\n\n  /** `Object#toString` result references. */\n  var funcTag = '[object Function]';\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the decompiled source of functions. */\n  var fnToString = Function.prototype.toString;\n\n  /**\n   * Used to resolve the `toStringTag` of values.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n   * for more details.\n   */\n  var objToString = objectProto.toString;\n\n  /** Used to detect if a method is native. */\n  var reNative = RegExp('^' +\n    escapeRegExp(objToString)\n    .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n  );\n\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n   * @example\n   *\n   * _.isNative(Array.prototype.push);\n   * // => true\n   *\n   * _.isNative(_);\n   * // => false\n   */\n  function isNative(value) {\n    if (value == null) {\n      return false;\n    }\n    if (objToString.call(value) == funcTag) {\n      return reNative.test(fnToString.call(value));\n    }\n    return (isObjectLike(value) && reHostCtor.test(value)) || false;\n  }\n\n  return isNative;\n});\n\n","define('lodash-amd/modern/lang/isArguments',['../internal/isLength', '../internal/isObjectLike'], function(isLength, isObjectLike) {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]';\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /**\n   * Used to resolve the `toStringTag` of values.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n   * for more details.\n   */\n  var objToString = objectProto.toString;\n\n  /**\n   * Checks if `value` is classified as an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    var length = isObjectLike(value) ? value.length : undefined;\n    return (isLength(length) && objToString.call(value) == argsTag) || false;\n  }\n\n  return isArguments;\n});\n\n","define('lodash-amd/modern/lang/isArray',['../internal/isLength', './isNative', '../internal/isObjectLike'], function(isLength, isNative, isObjectLike) {\n\n  /** `Object#toString` result references. */\n  var arrayTag = '[object Array]';\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /**\n   * Used to resolve the `toStringTag` of values.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n   * for more details.\n   */\n  var objToString = objectProto.toString;\n\n  /* Native method references for those with the same name as other `lodash` methods. */\n  var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(function() { return arguments; }());\n   * // => false\n   */\n  var isArray = nativeIsArray || function(value) {\n    return (isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag) || false;\n  };\n\n  return isArray;\n});\n\n","define('lodash-amd/modern/internal/isIndex',[], function() {\n\n  /**\n   * Used as the maximum length of an array-like value.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n   * for more details.\n   */\n  var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    value = +value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return value > -1 && value % 1 == 0 && value < length;\n  }\n\n  return isIndex;\n});\n\n","define('lodash-amd/modern/internal/root',[], function() {\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || this;\n\n  return root;\n});\n\n","define('lodash-amd/modern/support',['./lang/isNative', './internal/root'], function(isNative, root) {\n\n  /** Used to detect functions containing a `this` reference. */\n  var reThis = /\\bthis\\b/;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to detect DOM support. */\n  var document = (document = root.window) && document.document;\n\n  /** Native method references. */\n  var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /**\n   * An object environment feature flags.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = {};\n\n  (function(x) {\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but Firefox OS certified apps, older Opera mobile browsers, and\n     * the PlayStation 3; forced `false` for Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(root.WinRTError) && reThis.test(function() { return this; });\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * Detect if the DOM is supported.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    try {\n      support.dom = document.createDocumentFragment().nodeType === 11;\n    } catch(e) {\n      support.dom = false;\n    }\n\n    /**\n     * Detect if `arguments` object indexes are non-enumerable.\n     *\n     * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n     * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n     * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n     * checks for indexes that exceed their function's formal parameters with\n     * associated values of `0`.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    try {\n      support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n    } catch(e) {\n      support.nonEnumArgs = true;\n    }\n  }(0, 0));\n\n  return support;\n});\n\n","define('lodash-amd/modern/object/keysIn',['../lang/isArguments', '../lang/isArray', '../internal/isIndex', '../internal/isLength', '../lang/isObject', '../support'], function(isArguments, isArray, isIndex, isLength, isObject, support) {\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  function keysIn(object) {\n    if (object == null) {\n      return [];\n    }\n    if (!isObject(object)) {\n      object = Object(object);\n    }\n    var length = object.length;\n    length = (length && isLength(length) &&\n      (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n    var Ctor = object.constructor,\n        index = -1,\n        isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n        result = Array(length),\n        skipIndexes = length > 0;\n\n    while (++index < length) {\n      result[index] = (index + '');\n    }\n    for (var key in object) {\n      if (!(skipIndexes && isIndex(key, length)) &&\n          !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  return keysIn;\n});\n\n","define('lodash-amd/modern/internal/shimKeys',['../lang/isArguments', '../lang/isArray', './isIndex', './isLength', '../object/keysIn', '../support'], function(isArguments, isArray, isIndex, isLength, keysIn, support) {\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * A fallback implementation of `Object.keys` which creates an array of the\n   * own enumerable property names of `object`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns the array of property names.\n   */\n  function shimKeys(object) {\n    var props = keysIn(object),\n        propsLength = props.length,\n        length = propsLength && object.length;\n\n    var allowIndexes = length && isLength(length) &&\n      (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n    var index = -1,\n        result = [];\n\n    while (++index < propsLength) {\n      var key = props[index];\n      if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  return shimKeys;\n});\n\n","define('lodash-amd/modern/object/keys',['../internal/isLength', '../lang/isNative', '../lang/isObject', '../internal/shimKeys'], function(isLength, isNative, isObject, shimKeys) {\n\n  /* Native method references for those with the same name as other `lodash` methods. */\n  var nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (object) {\n      var Ctor = object.constructor,\n          length = object.length;\n    }\n    if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n        (typeof object != 'function' && (length && isLength(length)))) {\n      return shimKeys(object);\n    }\n    return isObject(object) ? nativeKeys(object) : [];\n  };\n\n  return keys;\n});\n\n","define('lodash-amd/modern/internal/baseForOwn',['./baseFor', '../object/keys'], function(baseFor, keys) {\n\n  /**\n   * The base implementation of `_.forOwn` without support for callback\n   * shorthands and `this` binding.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return baseFor(object, iteratee, keys);\n  }\n\n  return baseForOwn;\n});\n\n","define('lodash-amd/modern/internal/arrayCopy',[], function() {\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayCopy(source, array) {\n    var index = -1,\n        length = source.length;\n\n    array || (array = Array(length));\n    while (++index < length) {\n      array[index] = source[index];\n    }\n    return array;\n  }\n\n  return arrayCopy;\n});\n\n","define('lodash-amd/modern/internal/baseForIn',['./baseFor', '../object/keysIn'], function(baseFor, keysIn) {\n\n  /**\n   * The base implementation of `_.forIn` without support for callback\n   * shorthands and `this` binding.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForIn(object, iteratee) {\n    return baseFor(object, iteratee, keysIn);\n  }\n\n  return baseForIn;\n});\n\n","define('lodash-amd/modern/internal/shimIsPlainObject',['./baseForIn', './isObjectLike'], function(baseForIn, isObjectLike) {\n\n  /** `Object#toString` result references. */\n  var objectTag = '[object Object]';\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * Used to resolve the `toStringTag` of values.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n   * for more details.\n   */\n  var objToString = objectProto.toString;\n\n  /**\n   * A fallback implementation of `_.isPlainObject` which checks if `value`\n   * is an object created by the `Object` constructor or has a `[[Prototype]]`\n   * of `null`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    var Ctor;\n\n    // Exit early for non `Object` objects.\n    if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n        (!hasOwnProperty.call(value, 'constructor') &&\n          (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n      return false;\n    }\n    // IE < 9 iterates inherited properties before own properties. If the first\n    // iterated property is an object's own property then there are no inherited\n    // enumerable properties.\n    var result;\n    // In most environments an object's own properties are iterated before\n    // its inherited properties. If the last iterated property is an object's\n    // own property then there are no inherited enumerable properties.\n    baseForIn(value, function(subValue, key) {\n      result = key;\n    });\n    return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n  }\n\n  return shimIsPlainObject;\n});\n\n","define('lodash-amd/modern/lang/isPlainObject',['./isNative', '../internal/shimIsPlainObject'], function(isNative, shimIsPlainObject) {\n\n  /** `Object#toString` result references. */\n  var objectTag = '[object Object]';\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /**\n   * Used to resolve the `toStringTag` of values.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n   * for more details.\n   */\n  var objToString = objectProto.toString;\n\n  /** Native method references. */\n  var getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf;\n\n  /**\n   * Checks if `value` is a plain object, that is, an object created by the\n   * `Object` constructor or one with a `[[Prototype]]` of `null`.\n   *\n   * **Note:** This method assumes objects created by the `Object` constructor\n   * have no inherited enumerable properties.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * _.isPlainObject(new Foo);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   *\n   * _.isPlainObject(Object.create(null));\n   * // => true\n   */\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n    if (!(value && objToString.call(value) == objectTag)) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n        objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n    return objProto\n      ? (value == objProto || getPrototypeOf(value) == objProto)\n      : shimIsPlainObject(value);\n  };\n\n  return isPlainObject;\n});\n\n","define('lodash-amd/modern/lang/isTypedArray',['../internal/isLength', '../internal/isObjectLike'], function(isLength, isObjectLike) {\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /**\n   * Used to resolve the `toStringTag` of values.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n   * for more details.\n   */\n  var objToString = objectProto.toString;\n\n  /**\n   * Checks if `value` is classified as a typed array.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   * @example\n   *\n   * _.isTypedArray(new Uint8Array);\n   * // => true\n   *\n   * _.isTypedArray([]);\n   * // => false\n   */\n  function isTypedArray(value) {\n    return (isObjectLike(value) && isLength(value.length) && typedArrayTags[objToString.call(value)]) || false;\n  }\n\n  return isTypedArray;\n});\n\n","define('lodash-amd/modern/internal/baseCopy',[], function() {\n\n  /**\n   * Copies the properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Array} props The property names to copy.\n   * @returns {Object} Returns `object`.\n   */\n  function baseCopy(source, object, props) {\n    if (!props) {\n      props = object;\n      object = {};\n    }\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n      object[key] = source[key];\n    }\n    return object;\n  }\n\n  return baseCopy;\n});\n\n","define('lodash-amd/modern/lang/toPlainObject',['../internal/baseCopy', '../object/keysIn'], function(baseCopy, keysIn) {\n\n  /**\n   * Converts `value` to a plain object flattening inherited enumerable\n   * properties of `value` to own properties of the plain object.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Object} Returns the converted plain object.\n   * @example\n   *\n   * function Foo() {\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.assign({ 'a': 1 }, new Foo);\n   * // => { 'a': 1, 'b': 2 }\n   *\n   * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n   * // => { 'a': 1, 'b': 2, 'c': 3 }\n   */\n  function toPlainObject(value) {\n    return baseCopy(value, keysIn(value));\n  }\n\n  return toPlainObject;\n});\n\n","define('lodash-amd/modern/internal/baseMergeDeep',['./arrayCopy', '../lang/isArguments', '../lang/isArray', './isLength', '../lang/isPlainObject', '../lang/isTypedArray', '../lang/toPlainObject'], function(arrayCopy, isArguments, isArray, isLength, isPlainObject, isTypedArray, toPlainObject) {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /**\n   * A specialized version of `baseMerge` for arrays and objects which performs\n   * deep merges and tracks traversed objects enabling objects with circular\n   * references to be merged.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {string} key The key of the value to merge.\n   * @param {Function} mergeFunc The function to merge values.\n   * @param {Function} [customizer] The function to customize merging properties.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates values with source counterparts.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n    var length = stackA.length,\n        srcValue = source[key];\n\n    while (length--) {\n      if (stackA[length] == srcValue) {\n        object[key] = stackB[length];\n        return;\n      }\n    }\n    var value = object[key],\n        result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n        isCommon = typeof result == 'undefined';\n\n    if (isCommon) {\n      result = srcValue;\n      if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n        result = isArray(value)\n          ? value\n          : (value ? arrayCopy(value) : []);\n      }\n      else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n        result = isArguments(value)\n          ? toPlainObject(value)\n          : (isPlainObject(value) ? value : {});\n      }\n      else {\n        isCommon = false;\n      }\n    }\n    // Add the source value to the stack of traversed objects and associate\n    // it with its merged value.\n    stackA.push(srcValue);\n    stackB.push(result);\n\n    if (isCommon) {\n      // Recursively merge objects and arrays (susceptible to call stack limits).\n      object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n    } else if (result === result ? (result !== value) : (value === value)) {\n      object[key] = result;\n    }\n  }\n\n  return baseMergeDeep;\n});\n\n","define('lodash-amd/modern/internal/baseMerge',['./arrayEach', './baseForOwn', './baseMergeDeep', '../lang/isArray', './isLength', '../lang/isObject', './isObjectLike', '../lang/isTypedArray'], function(arrayEach, baseForOwn, baseMergeDeep, isArray, isLength, isObject, isObjectLike, isTypedArray) {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /**\n   * The base implementation of `_.merge` without support for argument juggling,\n   * multiple sources, and `this` binding `customizer` functions.\n   *\n   * @private\n   * @param {Object} object The destination object.\n   * @param {Object} source The source object.\n   * @param {Function} [customizer] The function to customize merging properties.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates values with source counterparts.\n   * @returns {Object} Returns the destination object.\n   */\n  function baseMerge(object, source, customizer, stackA, stackB) {\n    if (!isObject(object)) {\n      return object;\n    }\n    var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n    (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n      if (isObjectLike(srcValue)) {\n        stackA || (stackA = []);\n        stackB || (stackB = []);\n        return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = typeof result == 'undefined';\n\n      if (isCommon) {\n        result = srcValue;\n      }\n      if ((isSrcArr || typeof result != 'undefined') &&\n          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n        object[key] = result;\n      }\n    });\n    return object;\n  }\n\n  return baseMerge;\n});\n\n","define('lodash-amd/modern/utility/identity',[], function() {\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  return identity;\n});\n\n","define('lodash-amd/modern/internal/bindCallback',['../utility/identity'], function(identity) {\n\n  /**\n   * A specialized version of `baseCallback` which only supports `this` binding\n   * and specifying the number of arguments to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {number} [argCount] The number of arguments to provide to `func`.\n   * @returns {Function} Returns the callback.\n   */\n  function bindCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    if (typeof thisArg == 'undefined') {\n      return func;\n    }\n    switch (argCount) {\n      case 1: return function(value) {\n        return func.call(thisArg, value);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(thisArg, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(thisArg, accumulator, value, index, collection);\n      };\n      case 5: return function(value, other, key, object, source) {\n        return func.call(thisArg, value, other, key, object, source);\n      };\n    }\n    return function() {\n      return func.apply(thisArg, arguments);\n    };\n  }\n\n  return bindCallback;\n});\n\n","define('lodash-amd/modern/internal/isIterateeCall',['./isIndex', './isLength', '../lang/isObject'], function(isIndex, isLength, isObject) {\n\n  /**\n   * Checks if the provided arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number') {\n      var length = object.length,\n          prereq = isLength(length) && isIndex(index, length);\n    } else {\n      prereq = type == 'string' && index in object;\n    }\n    if (prereq) {\n      var other = object[index];\n      return value === value ? (value === other) : (other !== other);\n    }\n    return false;\n  }\n\n  return isIterateeCall;\n});\n\n","define('lodash-amd/modern/internal/createAssigner',['./bindCallback', './isIterateeCall'], function(bindCallback, isIterateeCall) {\n\n  /**\n   * Creates a function that assigns properties of source object(s) to a given\n   * destination object.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return function() {\n      var args = arguments,\n          length = args.length,\n          object = args[0];\n\n      if (length < 2 || object == null) {\n        return object;\n      }\n      var customizer = args[length - 2],\n          thisArg = args[length - 1],\n          guard = args[3];\n\n      if (length > 3 && typeof customizer == 'function') {\n        customizer = bindCallback(customizer, thisArg, 5);\n        length -= 2;\n      } else {\n        customizer = (length > 2 && typeof thisArg == 'function') ? thisArg : null;\n        length -= (customizer ? 1 : 0);\n      }\n      if (guard && isIterateeCall(args[1], args[2], guard)) {\n        customizer = length == 3 ? null : customizer;\n        length = 2;\n      }\n      var index = 0;\n      while (++index < length) {\n        var source = args[index];\n        if (source) {\n          assigner(object, source, customizer);\n        }\n      }\n      return object;\n    };\n  }\n\n  return createAssigner;\n});\n\n","define('lodash-amd/modern/object/merge',['../internal/baseMerge', '../internal/createAssigner'], function(baseMerge, createAssigner) {\n\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined` into the destination object. Subsequent sources\n   * overwrite property assignments of previous sources. If `customizer` is\n   * provided it is invoked to produce the merged values of the destination and\n   * source properties. If `customizer` returns `undefined` merging is handled\n   * by the method instead. The `customizer` is bound to `thisArg` and invoked\n   * with five arguments; (objectValue, sourceValue, key, object, source).\n   *\n   * @static\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @param {Function} [customizer] The function to customize merging properties.\n   * @param {*} [thisArg] The `this` binding of `customizer`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * var users = {\n   *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n   * };\n   *\n   * var ages = {\n   *   'data': [{ 'age': 36 }, { 'age': 40 }]\n   * };\n   *\n   * _.merge(users, ages);\n   * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n   *\n   * // using a customizer callback\n   * var object = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var other = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(object, other, function(a, b) {\n   *   if (_.isArray(a)) {\n   *     return a.concat(b);\n   *   }\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n   */\n  var merge = createAssigner(baseMerge);\n\n  return merge;\n});\n\n","define('lodash-amd/modern/internal/initCloneArray',[], function() {\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * Initializes an array clone.\n   *\n   * @private\n   * @param {Array} array The array to clone.\n   * @returns {Array} Returns the initialized clone.\n   */\n  function initCloneArray(array) {\n    var length = array.length,\n        result = new array.constructor(length);\n\n    // Add array properties assigned by `RegExp#exec`.\n    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n      result.index = array.index;\n      result.input = array.input;\n    }\n    return result;\n  }\n\n  return initCloneArray;\n});\n\n","define('lodash-amd/modern/utility/constant',[], function() {\n\n  /**\n   * Creates a function that returns `value`.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {*} value The value to return from the new function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var object = { 'user': 'fred' };\n   * var getter = _.constant(object);\n   *\n   * getter() === object;\n   * // => true\n   */\n  function constant(value) {\n    return function() {\n      return value;\n    };\n  }\n\n  return constant;\n});\n\n","define('lodash-amd/modern/internal/bufferClone',['../utility/constant', '../lang/isNative', './root'], function(constant, isNative, root) {\n\n  /** Native method references. */\n  var ArrayBuffer = isNative(ArrayBuffer = root.ArrayBuffer) && ArrayBuffer,\n      bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n      floor = Math.floor,\n      Uint8Array = isNative(Uint8Array = root.Uint8Array) && Uint8Array;\n\n  /** Used to clone array buffers. */\n  var Float64Array = (function() {\n    // Safari 5 errors when using an array buffer to initialize a typed array\n    // where the array buffer's `byteLength` is not a multiple of the typed\n    // array's `BYTES_PER_ELEMENT`.\n    try {\n      var func = isNative(func = root.Float64Array) && func,\n          result = new func(new ArrayBuffer(10), 0, 1) && func;\n    } catch(e) {}\n    return result;\n  }());\n\n  /** Used as the size, in bytes, of each `Float64Array` element. */\n  var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n  /**\n   * Creates a clone of the given array buffer.\n   *\n   * @private\n   * @param {ArrayBuffer} buffer The array buffer to clone.\n   * @returns {ArrayBuffer} Returns the cloned array buffer.\n   */\n  function bufferClone(buffer) {\n    return bufferSlice.call(buffer, 0);\n  }\n  if (!bufferSlice) {\n    // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n    bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n      var byteLength = buffer.byteLength,\n          floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n          offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n          result = new ArrayBuffer(byteLength);\n\n      if (floatLength) {\n        var view = new Float64Array(result, 0, floatLength);\n        view.set(new Float64Array(buffer, 0, floatLength));\n      }\n      if (byteLength != offset) {\n        view = new Uint8Array(result, offset);\n        view.set(new Uint8Array(buffer, offset));\n      }\n      return result;\n    };\n  }\n\n  return bufferClone;\n});\n\n","define('lodash-amd/modern/internal/initCloneByTag',['./bufferClone'], function(bufferClone) {\n\n  /** `Object#toString` result references. */\n  var boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      numberTag = '[object Number]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /**\n   * Initializes an object clone based on its `toStringTag`.\n   *\n   * **Note:** This function only supports cloning values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {string} tag The `toStringTag` of the object to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Object} Returns the initialized clone.\n   */\n  function initCloneByTag(object, tag, isDeep) {\n    var Ctor = object.constructor;\n    switch (tag) {\n      case arrayBufferTag:\n        return bufferClone(object);\n\n      case boolTag:\n      case dateTag:\n        return new Ctor(+object);\n\n      case float32Tag: case float64Tag:\n      case int8Tag: case int16Tag: case int32Tag:\n      case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n        var buffer = object.buffer;\n        return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n      case numberTag:\n      case stringTag:\n        return new Ctor(object);\n\n      case regexpTag:\n        var result = new Ctor(object.source, reFlags.exec(object));\n        result.lastIndex = object.lastIndex;\n    }\n    return result;\n  }\n\n  return initCloneByTag;\n});\n\n","define('lodash-amd/modern/internal/initCloneObject',[], function() {\n\n  /**\n   * Initializes an object clone.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @returns {Object} Returns the initialized clone.\n   */\n  function initCloneObject(object) {\n    var Ctor = object.constructor;\n    if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n      Ctor = Object;\n    }\n    return new Ctor;\n  }\n\n  return initCloneObject;\n});\n\n","define('lodash-amd/modern/internal/baseClone',['./arrayCopy', './arrayEach', './baseCopy', './baseForOwn', './initCloneArray', './initCloneByTag', './initCloneObject', '../lang/isArray', '../lang/isObject', '../object/keys'], function(arrayCopy, arrayEach, baseCopy, baseForOwn, initCloneArray, initCloneByTag, initCloneObject, isArray, isObject, keys) {\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /**\n   * Used to resolve the `toStringTag` of values.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n   * for more details.\n   */\n  var objToString = objectProto.toString;\n\n  /**\n   * The base implementation of `_.clone` without support for argument juggling\n   * and `this` binding `customizer` functions.\n   *\n   * @private\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @param {Function} [customizer] The function to customize cloning values.\n   * @param {string} [key] The key of `value`.\n   * @param {Object} [object] The object `value` belongs to.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates clones with source counterparts.\n   * @returns {*} Returns the cloned value.\n   */\n  function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n    var result;\n    if (customizer) {\n      result = object ? customizer(value, key, object) : customizer(value);\n    }\n    if (typeof result != 'undefined') {\n      return result;\n    }\n    if (!isObject(value)) {\n      return value;\n    }\n    var isArr = isArray(value);\n    if (isArr) {\n      result = initCloneArray(value);\n      if (!isDeep) {\n        return arrayCopy(value, result);\n      }\n    } else {\n      var tag = objToString.call(value),\n          isFunc = tag == funcTag;\n\n      if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n        result = initCloneObject(isFunc ? {} : value);\n        if (!isDeep) {\n          return baseCopy(value, result, keys(value));\n        }\n      } else {\n        return cloneableTags[tag]\n          ? initCloneByTag(value, tag, isDeep)\n          : (object ? value : {});\n      }\n    }\n    // Check for circular references and return corresponding clone.\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == value) {\n        return stackB[length];\n      }\n    }\n    // Add the source value to the stack of traversed objects and associate it with its clone.\n    stackA.push(value);\n    stackB.push(result);\n\n    // Recursively populate clone (susceptible to call stack limits).\n    (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n      result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n    });\n    return result;\n  }\n\n  return baseClone;\n});\n\n","define('lodash-amd/modern/lang/cloneDeep',['../internal/baseClone', '../internal/bindCallback'], function(baseClone, bindCallback) {\n\n  /**\n   * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n   * to produce the cloned values. If `customizer` returns `undefined` cloning\n   * is handled by the method instead. The `customizer` is bound to `thisArg`\n   * and invoked with two argument; (value [, index|key, object]).\n   *\n   * **Note:** This method is loosely based on the structured clone algorithm.\n   * The enumerable properties of `arguments` objects and objects created by\n   * constructors other than `Object` are cloned to plain `Object` objects. An\n   * empty object is returned for uncloneable values such as functions, DOM nodes,\n   * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n   * for more details.\n   *\n   * @static\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to deep clone.\n   * @param {Function} [customizer] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `customizer`.\n   * @returns {*} Returns the deep cloned value.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * var deep = _.cloneDeep(users);\n   * deep[0] === users[0];\n   * // => false\n   *\n   * // using a customizer callback\n   * var el = _.cloneDeep(document.body, function(value) {\n   *   if (_.isElement(value)) {\n   *     return value.cloneNode(true);\n   *   }\n   * });\n   *\n   * el === document.body\n   * // => false\n   * el.nodeName\n   * // => BODY\n   * el.childNodes.length;\n   * // => 20\n   */\n  function cloneDeep(value, customizer, thisArg) {\n    customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n    return baseClone(value, true, customizer);\n  }\n\n  return cloneDeep;\n});\n\n","define('scribe-plugin-sanitizer',[\n  'html-janitor',\n  'lodash-amd/modern/object/merge',\n  'lodash-amd/modern/lang/cloneDeep'\n], function (\n  HTMLJanitor,\n  merge,\n  cloneDeep\n) {\n\n  /**\n   * This plugin adds the ability to sanitize content when it is pasted into the\n   * scribe, adhering to a whitelist of allowed tags and attributes.\n   */\n\n  'use strict';\n\n  return function (config) {\n    // We extend the config to let through (1) Scribe position markers,\n    // otherwise we lose the caret position when running the Scribe content\n    // through this sanitizer, and (2) BR elements which are needed by the\n    // browser to ensure elements are selectable.\n    var configAllowMarkers = merge(cloneDeep(config), {\n      tags: {\n        em: {class: 'scribe-marker'},\n        br: {}\n      }\n    });\n\n    return function (scribe) {\n      var janitor = new HTMLJanitor(configAllowMarkers);\n\n      scribe.registerHTMLFormatter('sanitize', janitor.clean.bind(janitor));\n    };\n  };\n\n});\n\n"],"names":["root","factory","define","amd","exports","module","HTMLJanitor","this","config","isBlockElement","node","blockElementNames","indexOf","nodeName","isInlineElement","inlineElementNames","createTreeWalker","document","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","SHOW_COMMENT","prototype","clean","html","sandbox","createElement","innerHTML","_sanitize","parentNode","treeWalker","firstChild","toLowerCase","allowedAttrs","tags","_sanitized","nodeType","Node","TEXT_NODE","COMMENT_NODE","removeChild","containsBlockElement","isInline","Array","some","call","childNodes","isInvalid","isNotTopContainer","isNestedBlockElement","keepNestedBlockElements","length","insertBefore","a","attributes","attr","attrName","name","allowedAttrValue","notInAttrList","valueNotAllowed","value","removeAttribute","data","trim","previousElementSibling","nextElementSibling","nextSibling","arrayEach","array","iteratee","index","isObject","type","toObject","Object","baseFor","object","keysFunc","iterable","props","key","isLength","MAX_SAFE_INTEGER","Math","pow","baseToString","escapeRegExp","string","reHasRegExpChars","test","replace","reRegExpChars","RegExp","source","isObjectLike","isNative","objToString","funcTag","reNative","fnToString","reHostCtor","objectProto","Function","toString","isArguments","undefined","argsTag","arrayTag","nativeIsArray","isArray","isIndex","objectTypes","function","freeExports","freeModule","freeGlobal","global","freeWindow","window","reThis","propertyIsEnumerable","support","funcDecomp","WinRTError","funcNames","dom","createDocumentFragment","e","nonEnumArgs","arguments","keysIn","Ctor","constructor","isProto","result","skipIndexes","hasOwnProperty","push","shimKeys","propsLength","allowIndexes","nativeKeys","keys","baseForOwn","arrayCopy","baseForIn","shimIsPlainObject","objectTag","subValue","getPrototypeOf","isPlainObject","valueOf","objProto","isTypedArray","typedArrayTags","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","baseCopy","toPlainObject","baseMergeDeep","mergeFunc","customizer","stackA","stackB","srcValue","isCommon","baseMerge","isSrcArr","identity","bindCallback","func","thisArg","argCount","collection","accumulator","other","apply","isIterateeCall","prereq","createAssigner","assigner","args","guard","merge","initCloneArray","input","constant","bufferClone","buffer","bufferSlice","ArrayBuffer","slice","floor","Uint8Array","Float64Array","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","byteLength","floatLength","offset","view","set","initCloneByTag","tag","isDeep","byteOffset","reFlags","exec","lastIndex","initCloneObject","baseClone","isArr","isFunc","cloneableTags","cloneDeep","configAllowMarkers","em","class","br","scribe","janitor","registerHTMLFormatter","bind"]}