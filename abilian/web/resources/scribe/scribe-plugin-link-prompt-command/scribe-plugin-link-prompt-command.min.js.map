{"version":3,"file":"scribe-plugin-link-prompt-command.min.js","mappings":"AAAA,AAAAA,OAAA,uCAAA,WAMA,YAEA,OAAA,YACA,MAAA,UAAAC,GACA,GAAAC,GAAA,GAAAD,GAAAE,IAAAC,QAAA,aAGAF,GAAAG,SAAA,IAEAH,EAAAI,QAAA,SAAAC,GACA,GAAAC,GACAC,EAAA,GAAAR,GAAAE,IAAAO,UACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAI,cAAA,SAAAC,GACA,MAAAA,GAAAT,WAAAU,KAAAV,UACAW,KAAAD,OAEAE,EAAAL,EAAAA,EAAAM,KAAA,EAiBA,IAZAV,EAHAD,EAGAA,EAFAY,OAAAC,OAAA,gBAAAH,GAKAL,IACAD,EAAAU,WAAAT,GACAH,EAAAA,UAAAa,kBACAb,EAAAA,UAAAc,SAAAZ,IAMAH,EAAA,CAGA,GAAAgB,GAAA,gBACAC,EAAA,WACA,KAAAD,EAAAE,KAAAlB,KAAAiB,EAAAC,KAAAlB,GAEA,GAAA,IAAAkB,KAAAlB,GAAA,CACA,GAAAmB,GAAAR,OAAAS,QACA,wGAGAD,KACAnB,EAAA,UAAAA,OAEA,CACA,GAAAqB,GAAAV,OAAAS,QACA,8FAGAC,KACArB,EAAA,UAAAA,GAKAP,EAAAE,IAAA2B,cAAAC,UAAAzB,QAAA0B,KAAAjB,KAAAP,KAIAN,EAAA+B,WAAA,WAMA,GAAAxB,GAAA,GAAAR,GAAAE,IAAAO,SACA,SAAAD,EAAAI,cAAA,SAAAC,GACA,MAAAA,GAAAT,WAAAU,KAAAV,UACAW,KAAAD,QAGAd,EAAAiC,SAAAC,WAAAjC;AAjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../src/scribe-plugin-link-prompt-command.js"],"sourcesContent":["define('scribe-plugin-link-prompt-command',[],function () {\n\n  /**\n   * This plugin adds a command for creating links, including a basic prompt.\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var linkPromptCommand = new scribe.api.Command('createLink');\n\n\n      linkPromptCommand.nodeName = 'A';\n\n      linkPromptCommand.execute = function (passedLink) {\n        var link;\n        var selection = new scribe.api.Selection();\n        var range = selection.range;\n        var anchorNode = selection.getContaining(function (node) {\n          return node.nodeName === this.nodeName;\n        }.bind(this));\n\n        var initialLink = anchorNode ? anchorNode.href : '';\n\n        if (!passedLink)  {\n          link = window.prompt('Enter a link.', initialLink);\n        } else {\n          link = passedLink;\n        }\n\n        if (anchorNode) {\n          range.selectNode(anchorNode);\n          selection.selection.removeAllRanges();\n          selection.selection.addRange(range);\n        }\n\n        // FIXME: I don't like how plugins like this do so much. Is there a way\n        // to compose?\n\n        if (link) {\n          // Prepend href protocol if missing\n          // If a http/s or mailto link is provided, then we will trust that an link is valid\n          var urlProtocolRegExp = /^https?\\:\\/\\//;\n          var mailtoProtocolRegExp = /^mailto\\:/;\n          if (! urlProtocolRegExp.test(link) && ! mailtoProtocolRegExp.test(link)) {\n            // For emails we just look for a `@` symbol as it is easier.\n            if (/@/.test(link)) {\n              var shouldPrefixEmail = window.confirm(\n                'The URL you entered appears to be an email address. ' +\n                'Do you want to add the required “mailto:” prefix?'\n              );\n              if (shouldPrefixEmail) {\n                link = 'mailto:' + link;\n              }\n            } else {\n              var shouldPrefixLink = window.confirm(\n                'The URL you entered appears to be a link. ' +\n                'Do you want to add the required “http://” prefix?'\n              );\n              if (shouldPrefixLink) {\n                link = 'http://' + link;\n              }\n            }\n          }\n\n          scribe.api.SimpleCommand.prototype.execute.call(this, link);\n        }\n      };\n\n      linkPromptCommand.queryState = function () {\n        /**\n         * We override the native `document.queryCommandState` for links because\n         * the `createLink` and `unlink` commands are not supported.\n         * As per: http://jsbin.com/OCiJUZO/1/edit?js,console,output\n         */\n        var selection = new scribe.api.Selection();\n        return !! selection.getContaining(function (node) {\n          return node.nodeName === this.nodeName;\n        }.bind(this));\n      };\n\n      scribe.commands.linkPrompt = linkPromptCommand;\n    };\n  };\n\n});\n\n"],"names":["define","scribe","linkPromptCommand","api","Command","nodeName","execute","passedLink","link","selection","Selection","range","anchorNode","getContaining","node","this","bind","initialLink","href","window","prompt","selectNode","removeAllRanges","addRange","urlProtocolRegExp","mailtoProtocolRegExp","test","shouldPrefixEmail","confirm","shouldPrefixLink","SimpleCommand","prototype","call","queryState","commands","linkPrompt"]}